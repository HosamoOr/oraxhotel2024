//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1573, 1591

using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;

using LinqToDB;
using LinqToDB.Common;
using LinqToDB.Configuration;
using LinqToDB.Data;
using LinqToDB.Mapping;

namespace DataModels
{
	/// <summary>
	/// Database       : Hotel_alkheer
	/// Data Source    : DESKTOP-47H6HKQ
	/// Server Version : 15.00.2104
	/// </summary>
	public partial class HotelAlkheerDB : LinqToDB.Data.DataConnection
	{
		public ITable<AccountTable>            AccountTables            { get { return this.GetTable<AccountTable>(); } }
		public ITable<AdminTable>              AdminTables              { get { return this.GetTable<AdminTable>(); } }
		public ITable<AreaTable>               AreaTables               { get { return this.GetTable<AreaTable>(); } }
		public ITable<AspNetRole>              AspNetRoles              { get { return this.GetTable<AspNetRole>(); } }
		public ITable<AspNetRoleClaim>         AspNetRoleClaims         { get { return this.GetTable<AspNetRoleClaim>(); } }
		public ITable<AspNetUser>              AspNetUsers              { get { return this.GetTable<AspNetUser>(); } }
		public ITable<AspNetUserClaim>         AspNetUserClaims         { get { return this.GetTable<AspNetUserClaim>(); } }
		public ITable<AspNetUserLogin>         AspNetUserLogins         { get { return this.GetTable<AspNetUserLogin>(); } }
		public ITable<AspNetUserRole>          AspNetUserRoles          { get { return this.GetTable<AspNetUserRole>(); } }
		public ITable<AspNetUserToken>         AspNetUserTokens         { get { return this.GetTable<AspNetUserToken>(); } }
		public ITable<BankTable>               BankTables               { get { return this.GetTable<BankTable>(); } }
		public ITable<BillsTable>              BillsTables              { get { return this.GetTable<BillsTable>(); } }
		public ITable<BondTable>               BondTables               { get { return this.GetTable<BondTable>(); } }
		public ITable<BoxsTable>               BoxsTables               { get { return this.GetTable<BoxsTable>(); } }
		public ITable<BoxsUserTable>           BoxsUserTables           { get { return this.GetTable<BoxsUserTable>(); } }
		public ITable<ChangeRoomTable>         ChangeRoomTables         { get { return this.GetTable<ChangeRoomTable>(); } }
		public ITable<CityTable>               CityTables               { get { return this.GetTable<CityTable>(); } }
		public ITable<CompanyTable>            CompanyTables            { get { return this.GetTable<CompanyTable>(); } }
		public ITable<ConditionReceptionTable> ConditionReceptionTables { get { return this.GetTable<ConditionReceptionTable>(); } }
		public ITable<CountryTable>            CountryTables            { get { return this.GetTable<CountryTable>(); } }
		public ITable<CurrencyTable>           CurrencyTables           { get { return this.GetTable<CurrencyTable>(); } }
		public ITable<CustomerTable>           CustomerTables           { get { return this.GetTable<CustomerTable>(); } }
		public ITable<DetialsBillsTable>       DetialsBillsTables       { get { return this.GetTable<DetialsBillsTable>(); } }
		public ITable<DetialsHotelTable>       DetialsHotelTables       { get { return this.GetTable<DetialsHotelTable>(); } }
		public ITable<DetialsStatusTable>      DetialsStatusTables      { get { return this.GetTable<DetialsStatusTable>(); } }
		public ITable<EmpTable>                EmpTables                { get { return this.GetTable<EmpTable>(); } }
		public ITable<EntriesAccTable>         EntriesAccTables         { get { return this.GetTable<EntriesAccTable>(); } }
		public ITable<FollowerReceptionTable>  FollowerReceptionTables  { get { return this.GetTable<FollowerReceptionTable>(); } }
		public ITable<GroupAccountTable>       GroupAccountTables       { get { return this.GetTable<GroupAccountTable>(); } }
		public ITable<GroupServicesTable>      GroupServicesTables      { get { return this.GetTable<GroupServicesTable>(); } }
		public ITable<HotelsBranchTable>       HotelsBranchTables       { get { return this.GetTable<HotelsBranchTable>(); } }
		public ITable<ItemsExpensesTable>      ItemsExpensesTables      { get { return this.GetTable<ItemsExpensesTable>(); } }
		public ITable<JobsNameTable>           JobsNameTables           { get { return this.GetTable<JobsNameTable>(); } }
		public ITable<JopEmpTable>             JopEmpTables             { get { return this.GetTable<JopEmpTable>(); } }
		public ITable<MyCustomer>              MyCustomers              { get { return this.GetTable<MyCustomer>(); } }
		public ITable<OrgsTable>               OrgsTables               { get { return this.GetTable<OrgsTable>(); } }
		public ITable<OvertimeTable>           OvertimeTables           { get { return this.GetTable<OvertimeTable>(); } }
		public ITable<PriceRoomsTable>         PriceRoomsTables         { get { return this.GetTable<PriceRoomsTable>(); } }
		public ITable<ProductTable>            ProductTables            { get { return this.GetTable<ProductTable>(); } }
		public ITable<RecetionTable>           RecetionTables           { get { return this.GetTable<RecetionTable>(); } }
		public ITable<RoomsTable>              RoomsTables              { get { return this.GetTable<RoomsTable>(); } }
		public ITable<SettingGeneralTable>     SettingGeneralTables     { get { return this.GetTable<SettingGeneralTable>(); } }
		public ITable<SettingReceptionTable>   SettingReceptionTables   { get { return this.GetTable<SettingReceptionTable>(); } }
		public ITable<StatusCurrentTable>      StatusCurrentTables      { get { return this.GetTable<StatusCurrentTable>(); } }
		public ITable<TaxGroupTable>           TaxGroupTables           { get { return this.GetTable<TaxGroupTable>(); } }
		public ITable<TypeRoomsTable>          TypeRoomsTables          { get { return this.GetTable<TypeRoomsTable>(); } }
		public ITable<UserTable>               UserTables               { get { return this.GetTable<UserTable>(); } }

		public HotelAlkheerDB()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public HotelAlkheerDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public HotelAlkheerDB(LinqToDBConnectionOptions options)
			: base(options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public HotelAlkheerDB(LinqToDBConnectionOptions<HotelAlkheerDB> options)
			: base(options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	[Table(Schema="dbo", Name="account_table")]
	public partial class AccountTable
	{
		[Column("id"),         PrimaryKey,  NotNull] public int       Id        { get; set; } // int
		[Column("name"),                    NotNull] public string    Name      { get; set; } // nvarchar(100)
		[Column("status"),        Nullable         ] public string    Status    { get; set; } // nvarchar(50)
		[Column("is_private"),    Nullable         ] public bool?     IsPrivate { get; set; } // bit
		[Column("createat"),      Nullable         ] public DateTime? Createat  { get; set; } // datetime
		[Column("id_group"),                NotNull] public int       IdGroup   { get; set; } // int
		[Column("code"),          Nullable         ] public int?      Code      { get; set; } // int

		#region Associations

		/// <summary>
		/// fk_bank_account_BackReference (dbo.bank_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdAccount", CanBeNull=true)]
		public IEnumerable<BankTable> Fkbankaccounts { get; set; }

		/// <summary>
		/// fk_bills_account_BackReference (dbo.bills_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdAccount", CanBeNull=true)]
		public IEnumerable<BillsTable> Fkbillsaccounts { get; set; }

		/// <summary>
		/// fk_bond_account_BackReference (dbo.bond_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdAccount", CanBeNull=true)]
		public IEnumerable<BondTable> Fkbondaccounts { get; set; }

		/// <summary>
		/// fk_boxs_account_BackReference (dbo.boxs_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdAccount", CanBeNull=true)]
		public IEnumerable<BoxsTable> Fkboxsaccounts { get; set; }

		/// <summary>
		/// fk_company_account_BackReference (dbo.company_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdAccount", CanBeNull=true)]
		public IEnumerable<CompanyTable> Fkcompanyaccounts { get; set; }

		/// <summary>
		/// fk_entries_acc_account_BackReference (dbo.entries_acc_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdAccount", CanBeNull=true)]
		public IEnumerable<EntriesAccTable> Fkentriesaccaccounts { get; set; }

		/// <summary>
		/// fk_group_account_account (dbo.group_account_table)
		/// </summary>
		[Association(ThisKey="IdGroup", OtherKey="Id", CanBeNull=false)]
		public GroupAccountTable Fkgroupaccountaccount { get; set; }

		/// <summary>
		/// FK_items_expenses_table_account_table_BackReference (dbo.items_expenses_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdAccount", CanBeNull=true)]
		public IEnumerable<ItemsExpensesTable> Itemsexpensestableaccounttables { get; set; }

		/// <summary>
		/// FK_my_customers_account_table_BackReference (dbo.my_customers)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdAccount", CanBeNull=true)]
		public IEnumerable<MyCustomer> Mycustomersaccounttables { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="admin_table")]
	public partial class AdminTable
	{
		[Column("id"),             PrimaryKey,  Identity] public long      Id            { get; set; } // bigint
		[Column("name"),           NotNull              ] public string    Name          { get; set; } // nvarchar(70)
		[Column("username"),       NotNull              ] public string    Username      { get; set; } // nvarchar(50)
		[Column("password"),       NotNull              ] public string    Password      { get; set; } // nvarchar(200)
		[Column("status"),            Nullable          ] public bool?     Status        { get; set; } // bit
		[Column("lastdate_login"),    Nullable          ] public DateTime? LastdateLogin { get; set; } // date
		[Column("adminid"),           Nullable          ] public long?     Adminid       { get; set; } // bigint
	}

	[Table(Schema="dbo", Name="area_table")]
	public partial class AreaTable
	{
		[Column("id"),                 PrimaryKey,  Identity] public int    Id               { get; set; } // int
		[Column("name"),               NotNull              ] public string Name             { get; set; } // nvarchar(200)
		[Column("id_city"),            NotNull              ] public int    IdCity           { get; set; } // int
		[Column("name_en"),               Nullable          ] public string NameEn           { get; set; } // nvarchar(200)
		[Column("name_ar_tashkeel"),      Nullable          ] public string NameArTashkeel   { get; set; } // nvarchar(max)
		[Column("name_ar_normalized"),    Nullable          ] public string NameArNormalized { get; set; } // nvarchar(max)
		[Column("name_en_normalized"),    Nullable          ] public string NameEnNormalized { get; set; } // nvarchar(max)

		#region Associations

		/// <summary>
		/// FK_area_table_city_table (dbo.city_table)
		/// </summary>
		[Association(ThisKey="IdCity", OtherKey="Id", CanBeNull=false)]
		public CityTable Areatablecitytable { get; set; }

		/// <summary>
		/// FK_customer_table_area_table_BackReference (dbo.customer_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdArea", CanBeNull=true)]
		public IEnumerable<CustomerTable> Customertableareatables { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="AspNetRoles")]
	public partial class AspNetRole
	{
		[PrimaryKey, NotNull    ] public string Id               { get; set; } // nvarchar(450)
		[Column,        Nullable] public string Name             { get; set; } // nvarchar(256)
		[Column,        Nullable] public string NormalizedName   { get; set; } // nvarchar(256)
		[Column,        Nullable] public string ConcurrencyStamp { get; set; } // nvarchar(max)
	}

	[Table(Schema="dbo", Name="AspNetRoleClaims")]
	public partial class AspNetRoleClaim
	{
		[PrimaryKey, Identity   ] public int    Id         { get; set; } // int
		[Column,     NotNull    ] public string RoleId     { get; set; } // nvarchar(450)
		[Column,        Nullable] public string ClaimType  { get; set; } // nvarchar(max)
		[Column,        Nullable] public string ClaimValue { get; set; } // nvarchar(max)
	}

	[Table(Schema="dbo", Name="AspNetUsers")]
	public partial class AspNetUser
	{
		[PrimaryKey, NotNull    ] public string          Id                   { get; set; } // nvarchar(450)
		[Column,        Nullable] public string          UserName             { get; set; } // nvarchar(256)
		[Column,        Nullable] public string          NormalizedUserName   { get; set; } // nvarchar(256)
		[Column,        Nullable] public string          Email                { get; set; } // nvarchar(256)
		[Column,        Nullable] public string          NormalizedEmail      { get; set; } // nvarchar(256)
		[Column,     NotNull    ] public bool            EmailConfirmed       { get; set; } // bit
		[Column,        Nullable] public string          PasswordHash         { get; set; } // nvarchar(max)
		[Column,        Nullable] public string          SecurityStamp        { get; set; } // nvarchar(max)
		[Column,        Nullable] public string          ConcurrencyStamp     { get; set; } // nvarchar(max)
		[Column,        Nullable] public string          PhoneNumber          { get; set; } // nvarchar(max)
		[Column,     NotNull    ] public bool            PhoneNumberConfirmed { get; set; } // bit
		[Column,     NotNull    ] public bool            TwoFactorEnabled     { get; set; } // bit
		[Column,        Nullable] public DateTimeOffset? LockoutEnd           { get; set; } // datetimeoffset(7)
		[Column,     NotNull    ] public bool            LockoutEnabled       { get; set; } // bit
		[Column,     NotNull    ] public int             AccessFailedCount    { get; set; } // int
		[Column,        Nullable] public string          FirstName            { get; set; } // nvarchar(100)
		[Column,        Nullable] public string          LastName             { get; set; } // nvarchar(100)

		#region Associations

		/// <summary>
		/// FK_boxs_user_table_AspNetUsers_BackReference (dbo.boxs_user_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdAspUser", CanBeNull=true)]
		public IEnumerable<BoxsUserTable> Boxsusertables { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="AspNetUserClaims")]
	public partial class AspNetUserClaim
	{
		[PrimaryKey, Identity   ] public int    Id         { get; set; } // int
		[Column,     NotNull    ] public string UserId     { get; set; } // nvarchar(450)
		[Column,        Nullable] public string ClaimType  { get; set; } // nvarchar(max)
		[Column,        Nullable] public string ClaimValue { get; set; } // nvarchar(max)
	}

	[Table(Schema="dbo", Name="AspNetUserLogins")]
	public partial class AspNetUserLogin
	{
		[PrimaryKey(1), NotNull    ] public string LoginProvider       { get; set; } // nvarchar(128)
		[PrimaryKey(2), NotNull    ] public string ProviderKey         { get; set; } // nvarchar(128)
		[Column,           Nullable] public string ProviderDisplayName { get; set; } // nvarchar(max)
		[Column,        NotNull    ] public string UserId              { get; set; } // nvarchar(450)
	}

	[Table(Schema="dbo", Name="AspNetUserRoles")]
	public partial class AspNetUserRole
	{
		[PrimaryKey(1), NotNull] public string UserId { get; set; } // nvarchar(450)
		[PrimaryKey(2), NotNull] public string RoleId { get; set; } // nvarchar(450)
	}

	[Table(Schema="dbo", Name="AspNetUserTokens")]
	public partial class AspNetUserToken
	{
		[PrimaryKey(1), NotNull    ] public string UserId        { get; set; } // nvarchar(450)
		[PrimaryKey(2), NotNull    ] public string LoginProvider { get; set; } // nvarchar(128)
		[PrimaryKey(3), NotNull    ] public string Name          { get; set; } // nvarchar(128)
		[Column,           Nullable] public string Value         { get; set; } // nvarchar(max)
	}

	[Table(Schema="dbo", Name="bank_table")]
	public partial class BankTable
	{
		[Column("id"),         PrimaryKey,  Identity] public int    Id        { get; set; } // int
		[Column("name"),       NotNull              ] public string Name      { get; set; } // nvarchar(300)
		[Column("is_default"),    Nullable          ] public bool?  IsDefault { get; set; } // bit
		[Column("id_account"), NotNull              ] public int    IdAccount { get; set; } // int
		[Column("id_sub"),        Nullable          ] public int?   IdSub     { get; set; } // int

		#region Associations

		/// <summary>
		/// fk_bank_account (dbo.account_table)
		/// </summary>
		[Association(ThisKey="IdAccount", OtherKey="Id", CanBeNull=false)]
		public AccountTable Fkbankaccount { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="bills_table")]
	public partial class BillsTable
	{
		[Column("id"),                     PrimaryKey,  Identity] public long      Id                  { get; set; } // bigint
		[Column("type"),                   NotNull              ] public string    Type                { get; set; } // nvarchar(20)
		[Column("type_pay"),               NotNull              ] public string    TypePay             { get; set; } // nvarchar(20)
		[Column("num_reference"),             Nullable          ] public string    NumReference        { get; set; } // nvarchar(100)
		[Column("date"),                   NotNull              ] public DateTime  Date                { get; set; } // datetime
		[Column("total"),                     Nullable          ] public double?   Total               { get; set; } // float
		[Column("is_for_room"),            NotNull              ] public bool      IsForRoom           { get; set; } // bit
		[Column("deserve_amount"),            Nullable          ] public double?   DeserveAmount       { get; set; } // float
		[Column("type_discount"),             Nullable          ] public string    TypeDiscount        { get; set; } // nvarchar(50)
		[Column("qty_discount"),              Nullable          ] public double?   QtyDiscount         { get; set; } // float
		[Column("pay_amount"),                Nullable          ] public double?   PayAmount           { get; set; } // float
		[Column("rest_amount"),               Nullable          ] public double?   RestAmount          { get; set; } // float
		[Column("num_check"),                 Nullable          ] public string    NumCheck            { get; set; } // nvarchar(50)
		[Column("num_card"),                  Nullable          ] public string    NumCard             { get; set; } // nvarchar(50)
		[Column("note"),                      Nullable          ] public string    Note                { get; set; } // nvarchar(max)
		[Column("createat"),                  Nullable          ] public DateTime? Createat            { get; set; } // datetime
		[Column("id_account"),             NotNull              ] public int       IdAccount           { get; set; } // int
		[Column("id_reception"),              Nullable          ] public long?     IdReception         { get; set; } // bigint
		[Column("id_bank"),                   Nullable          ] public int?      IdBank              { get; set; } // int
		[Column("customer_or_company"),    NotNull              ] public string    CustomerOrCompany   { get; set; } // nvarchar(50)
		[Column("id_currancy"),               Nullable          ] public int?      IdCurrancy          { get; set; } // int
		[Column("total_tax_price"),           Nullable          ] public double?   TotalTaxPrice       { get; set; } // float
		[Column("total_tax_rate"),            Nullable          ] public double?   TotalTaxRate        { get; set; } // float
		[Column("include_tax"),               Nullable          ] public bool?     IncludeTax          { get; set; } // bit
		[Column("total_baladi_tax_price"),    Nullable          ] public double?   TotalBaladiTaxPrice { get; set; } // float
		[Column("total_baladi_tax_rate"),     Nullable          ] public double?   TotalBaladiTaxRate  { get; set; } // float
		[Column("is_baladi_tax"),             Nullable          ] public bool?     IsBaladiTax         { get; set; } // bit

		#region Associations

		/// <summary>
		/// fk_bills_account (dbo.account_table)
		/// </summary>
		[Association(ThisKey="IdAccount", OtherKey="Id", CanBeNull=false)]
		public AccountTable Fkbillsaccount { get; set; }

		/// <summary>
		/// fk_bills_detials_bills_BackReference (dbo.detials_bills_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdBill", CanBeNull=true)]
		public IEnumerable<DetialsBillsTable> Fkbillsdetialsbills { get; set; }

		/// <summary>
		/// fk_bills_reception (dbo.recetion_table)
		/// </summary>
		[Association(ThisKey="IdReception", OtherKey="Id", CanBeNull=true)]
		public RecetionTable Fkbillsreception { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="bond_table")]
	public partial class BondTable
	{
		[Column("id"),               PrimaryKey,  Identity] public long      Id             { get; set; } // bigint
		[Column("type"),             NotNull              ] public string    Type           { get; set; } // nvarchar(20)
		[Column("type_pay"),         NotNull              ] public string    TypePay        { get; set; } // nvarchar(20)
		[Column("num_reference"),       Nullable          ] public string    NumReference   { get; set; } // nvarchar(100)
		[Column("date"),             NotNull              ] public DateTime  Date           { get; set; } // datetime
		[Column("amount"),           NotNull              ] public double    Amount         { get; set; } // float
		[Column("loc_pay"),             Nullable          ] public string    LocPay         { get; set; } // nvarchar(300)
		[Column("worthy_date"),         Nullable          ] public DateTime? WorthyDate     { get; set; } // datetime
		[Column("why"),                 Nullable          ] public string    Why            { get; set; } // nvarchar(max)
		[Column("hand"),                Nullable          ] public string    Hand           { get; set; } // nvarchar(max)
		[Column("num_check"),           Nullable          ] public string    NumCheck       { get; set; } // nvarchar(50)
		[Column("num_card"),            Nullable          ] public string    NumCard        { get; set; } // nvarchar(50)
		[Column("note"),                Nullable          ] public string    Note           { get; set; } // nvarchar(max)
		[Column("createat"),            Nullable          ] public DateTime? Createat       { get; set; } // datetime
		[Column("is_done_pay"),         Nullable          ] public bool?     IsDonePay      { get; set; } // bit
		[Column("id_bond_pay"),         Nullable          ] public long?     IdBondPay      { get; set; } // bigint
		[Column("id_account"),       NotNull              ] public int       IdAccount      { get; set; } // int
		[Column("id_reception"),        Nullable          ] public long?     IdReception    { get; set; } // bigint
		[Column("id_item_expenses"),    Nullable          ] public int?      IdItemExpenses { get; set; } // int
		[Column("id_bank"),             Nullable          ] public int?      IdBank         { get; set; } // int
		[Column("id_currancy"),         Nullable          ] public int?      IdCurrancy     { get; set; } // int
		[Column("time"),                Nullable          ] public TimeSpan? Time           { get; set; } // time(7)

		#region Associations

		/// <summary>
		/// fk_bond_account (dbo.account_table)
		/// </summary>
		[Association(ThisKey="IdAccount", OtherKey="Id", CanBeNull=false)]
		public AccountTable Fkbondaccount { get; set; }

		/// <summary>
		/// fk_bond_bond (dbo.bond_table)
		/// </summary>
		[Association(ThisKey="IdBondPay", OtherKey="Id", CanBeNull=true)]
		public BondTable Fkbondbond { get; set; }

		/// <summary>
		/// fk_bond_bond_BackReference (dbo.bond_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdBondPay", CanBeNull=true)]
		public IEnumerable<BondTable> FkBondBondBackReferences { get; set; }

		/// <summary>
		/// fk_bond_expense (dbo.items_expenses_table)
		/// </summary>
		[Association(ThisKey="IdItemExpenses", OtherKey="Id", CanBeNull=true)]
		public ItemsExpensesTable Fkbondexpense { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="boxs_table")]
	public partial class BoxsTable
	{
		[Column("id"),         PrimaryKey,  Identity] public int    Id        { get; set; } // int
		[Column("name"),       NotNull              ] public string Name      { get; set; } // nvarchar(300)
		[Column("is_default"),    Nullable          ] public bool?  IsDefault { get; set; } // bit
		[Column("id_account"), NotNull              ] public int    IdAccount { get; set; } // int
		[Column("id_sub"),        Nullable          ] public int?   IdSub     { get; set; } // int
		[Column("is_private"), NotNull              ] public bool   IsPrivate { get; set; } // bit

		#region Associations

		/// <summary>
		/// FK_boxs_user_table_boxs_table_BackReference (dbo.boxs_user_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdBox", CanBeNull=true)]
		public IEnumerable<BoxsUserTable> Boxsusertableboxstables { get; set; }

		/// <summary>
		/// fk_boxs_account (dbo.account_table)
		/// </summary>
		[Association(ThisKey="IdAccount", OtherKey="Id", CanBeNull=false)]
		public AccountTable Fkboxsaccount { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="boxs_user_table")]
	public partial class BoxsUserTable
	{
		[Column("id"),         PrimaryKey,  Identity] public int    Id        { get; set; } // int
		[Column("id_box"),     NotNull              ] public int    IdBox     { get; set; } // int
		[Column("id_aspUser"), NotNull              ] public string IdAspUser { get; set; } // nvarchar(450)
		[Column("is_defult"),     Nullable          ] public bool?  IsDefult  { get; set; } // bit

		#region Associations

		/// <summary>
		/// FK_boxs_user_table_AspNetUsers (dbo.AspNetUsers)
		/// </summary>
		[Association(ThisKey="IdAspUser", OtherKey="Id", CanBeNull=false)]
		public AspNetUser BoxsusertableAspNetUser { get; set; }

		/// <summary>
		/// FK_boxs_user_table_boxs_table (dbo.boxs_table)
		/// </summary>
		[Association(ThisKey="IdBox", OtherKey="Id", CanBeNull=false)]
		public BoxsTable Boxsusertableboxstable { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="change_room_table")]
	public partial class ChangeRoomTable
	{
		[Column("id"),            PrimaryKey,  Identity] public int      Id           { get; set; } // int
		[Column("id_room_from"),  NotNull              ] public int      IdRoomFrom   { get; set; } // int
		[Column("id_room_to"),    NotNull              ] public int      IdRoomTo     { get; set; } // int
		[Column("why"),           NotNull              ] public string   Why          { get; set; } // nvarchar(max)
		[Column("date"),          NotNull              ] public DateTime Date         { get; set; } // datetime
		[Column("price_old"),     NotNull              ] public double   PriceOld     { get; set; } // float
		[Column("price_current"), NotNull              ] public double   PriceCurrent { get; set; } // float
		[Column("id_receptoin"),  NotNull              ] public long     IdReceptoin  { get; set; } // bigint
		[Column("id_sub"),           Nullable          ] public int?     IdSub        { get; set; } // int
	}

	[Table(Schema="dbo", Name="city_table")]
	public partial class CityTable
	{
		[Column("id"),         PrimaryKey,  Identity] public int    Id        { get; set; } // int
		[Column("name"),       NotNull              ] public string Name      { get; set; } // nvarchar(max)
		[Column("id_country"),    Nullable          ] public int?   IdCountry { get; set; } // int
		[Column("name_en"),       Nullable          ] public string NameEn    { get; set; } // nvarchar(max)

		#region Associations

		/// <summary>
		/// FK_area_table_city_table_BackReference (dbo.area_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdCity", CanBeNull=true)]
		public IEnumerable<AreaTable> Areatablecitytables { get; set; }

		/// <summary>
		/// FK_city_table_country_table (dbo.country_table)
		/// </summary>
		[Association(ThisKey="IdCountry", OtherKey="Id", CanBeNull=true)]
		public CountryTable Citytablecountrytable { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="company_table")]
	public partial class CompanyTable
	{
		[Column("id"),         PrimaryKey,  Identity] public int    Id        { get; set; } // int
		[Column("name"),       NotNull              ] public string Name      { get; set; } // nvarchar(50)
		[Column("id_account"),    Nullable          ] public int?   IdAccount { get; set; } // int
		[Column("id_sub"),        Nullable          ] public int?   IdSub     { get; set; } // int

		#region Associations

		/// <summary>
		/// fk_company_account (dbo.account_table)
		/// </summary>
		[Association(ThisKey="IdAccount", OtherKey="Id", CanBeNull=true)]
		public AccountTable Fkcompanyaccount { get; set; }

		/// <summary>
		/// fk_company_recetion_BackReference (dbo.recetion_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdCo", CanBeNull=true)]
		public IEnumerable<RecetionTable> Fkcompanyrecetions { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="condition_reception_table")]
	public partial class ConditionReceptionTable
	{
		[Column("id"),     PrimaryKey, Identity] public int    Id    { get; set; } // int
		[Column("name"),   NotNull             ] public string Name  { get; set; } // nvarchar(max)
		[Column("num"),    NotNull             ] public int    Num   { get; set; } // int
		[Column("id_sub"), NotNull             ] public int    IdSub { get; set; } // int
	}

	[Table(Schema="dbo", Name="country_table")]
	public partial class CountryTable
	{
		[Column("id"),      PrimaryKey,  Identity] public int    Id     { get; set; } // int
		[Column("name"),    NotNull              ] public string Name   { get; set; } // nvarchar(200)
		[Column("name_en"),    Nullable          ] public string NameEn { get; set; } // nvarchar(200)

		#region Associations

		/// <summary>
		/// FK_city_table_country_table_BackReference (dbo.city_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdCountry", CanBeNull=true)]
		public IEnumerable<CityTable> Citytablecountrytables { get; set; }

		/// <summary>
		/// FK_hotels_table_country_table_BackReference (dbo.hotels_branch_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdCountry", CanBeNull=true)]
		public IEnumerable<HotelsBranchTable> Hotelstablecountrytables { get; set; }

		/// <summary>
		/// FK_org_table_country_table_BackReference (dbo.orgs_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdCountry", CanBeNull=true)]
		public IEnumerable<OrgsTable> Orgtablecountrytables { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="currency_table")]
	public partial class CurrencyTable
	{
		[Column("id"),           PrimaryKey,  Identity] public int     Id          { get; set; } // int
		[Column("name"),         NotNull              ] public string  Name        { get; set; } // nvarchar(300)
		[Column("is_default"),      Nullable          ] public bool?   IsDefault   { get; set; } // bit
		[Column("code"),            Nullable          ] public string  Code        { get; set; } // nvarchar(5)
		[Column("rate_convert"),    Nullable          ] public double? RateConvert { get; set; } // float
		[Column("id_sub"),          Nullable          ] public int?    IdSub       { get; set; } // int
	}

	[Table(Schema="dbo", Name="customer_table")]
	public partial class CustomerTable
	{
		[Column("id"),             PrimaryKey,  Identity] public long      Id            { get; set; } // bigint
		[Column("name"),           NotNull              ] public string    Name          { get; set; } // nvarchar(max)
		[Column("type"),           NotNull              ] public string    Type          { get; set; } // nvarchar(100)
		[Column("sex"),               Nullable          ] public string    Sex           { get; set; } // nvarchar(10)
		[Column("email"),             Nullable          ] public string    Email         { get; set; } // nvarchar(max)
		[Column("nationality"),    NotNull              ] public string    Nationality   { get; set; } // nvarchar(300)
		[Column("type_work"),         Nullable          ] public string    TypeWork      { get; set; } // nvarchar(100)
		[Column("loc_work"),          Nullable          ] public string    LocWork       { get; set; } // nvarchar(100)
		[Column("phone_work"),        Nullable          ] public string    PhoneWork     { get; set; } // nvarchar(100)
		[Column("type_proof"),     NotNull              ] public string    TypeProof     { get; set; } // nvarchar(30)
		[Column("num_proof"),      NotNull              ] public string    NumProof      { get; set; } // nvarchar(300)
		[Column("release_date"),      Nullable          ] public DateTime? ReleaseDate   { get; set; } // datetime
		[Column("end_date"),          Nullable          ] public DateTime? EndDate       { get; set; } // datetime
		[Column("loc_release"),       Nullable          ] public string    LocRelease    { get; set; } // nvarchar(300)
		[Column("createat"),       NotNull              ] public DateTime  Createat      { get; set; } // datetime
		[Column("public_note"),       Nullable          ] public string    PublicNote    { get; set; } // nvarchar(max)
		[Column("id_area"),           Nullable          ] public int?      IdArea        { get; set; } // int
		[Column("id_nationality"),    Nullable          ] public int?      IdNationality { get; set; } // int

		#region Associations

		/// <summary>
		/// FK_customer_table_area_table (dbo.area_table)
		/// </summary>
		[Association(ThisKey="IdArea", OtherKey="Id", CanBeNull=true)]
		public AreaTable Customertableareatable { get; set; }

		/// <summary>
		/// FK_follower_reception_table_customer_table_BackReference (dbo.follower_reception_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdCustomer", CanBeNull=true)]
		public IEnumerable<FollowerReceptionTable> Followerreceptiontablecustomertables { get; set; }

		/// <summary>
		/// FK_my_customers_customer_table_BackReference (dbo.my_customers)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdCustomer", CanBeNull=true)]
		public IEnumerable<MyCustomer> Mycustomerscustomertables { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="detials_bills_table")]
	public partial class DetialsBillsTable
	{
		[Column("id"),               PrimaryKey,  Identity] public long    Id             { get; set; } // bigint
		[Column("qty"),                 Nullable          ] public double? Qty            { get; set; } // float
		[Column("price_one"),           Nullable          ] public double? PriceOne       { get; set; } // float
		[Column("total"),               Nullable          ] public double? Total          { get; set; } // float
		[Column("id_bill"),          NotNull              ] public long    IdBill         { get; set; } // bigint
		[Column("id_product"),       NotNull              ] public int     IdProduct      { get; set; } // int
		[Column("tax_price"),           Nullable          ] public double? TaxPrice       { get; set; } // float
		[Column("tax_rate"),            Nullable          ] public double? TaxRate        { get; set; } // float
		[Column("baladi_tax_price"),    Nullable          ] public double? BaladiTaxPrice { get; set; } // float
		[Column("baladi_tax_rate"),     Nullable          ] public double? BaladiTaxRate  { get; set; } // float
		[Column("is_baladi_tax"),       Nullable          ] public bool?   IsBaladiTax    { get; set; } // bit

		#region Associations

		/// <summary>
		/// fk_bills_detials_bills (dbo.bills_table)
		/// </summary>
		[Association(ThisKey="IdBill", OtherKey="Id", CanBeNull=false)]
		public BillsTable Fkbillsdetialsbill { get; set; }

		/// <summary>
		/// fk_product_services_detials (dbo.product_table)
		/// </summary>
		[Association(ThisKey="IdProduct", OtherKey="Id", CanBeNull=false)]
		public ProductTable Fkproductservicesdetial { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="detials_hotel_table")]
	public partial class DetialsHotelTable
	{
		[Column("id"),          PrimaryKey,  Identity] public int     Id         { get; set; } // int
		[Column("count_room"),     Nullable          ] public double? CountRoom  { get; set; } // float
		[Column("count_floot"),    Nullable          ] public double? CountFloot { get; set; } // float
		[Column("id_ho"),       NotNull              ] public int     IdHo       { get; set; } // int

		#region Associations

		/// <summary>
		/// fk_detials_hotel_hotels (dbo.hotels_branch_table)
		/// </summary>
		[Association(ThisKey="IdHo", OtherKey="Id", CanBeNull=false)]
		public HotelsBranchTable Fkdetialshotelhotel { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="detials_status_table")]
	public partial class DetialsStatusTable
	{
		[Column("id"),               PrimaryKey,  Identity] public long      Id             { get; set; } // bigint
		[Column("status"),              Nullable          ] public string    Status         { get; set; } // nvarchar(50)
		[Column("id_room"),          NotNull              ] public int       IdRoom         { get; set; } // int
		[Column("detials"),             Nullable          ] public string    Detials        { get; set; } // nvarchar(max)
		[Column("start_date"),          Nullable          ] public DateTime? StartDate      { get; set; } // datetime2(7)
		[Column("end_date"),            Nullable          ] public DateTime? EndDate        { get; set; } // datetime2(7)
		[Column("id_reception"),        Nullable          ] public long?     IdReception    { get; set; } // bigint
		[Column("id_emp"),              Nullable          ] public int?      IdEmp          { get; set; } // int
		[Column("createat"),         NotNull              ] public DateTime  Createat       { get; set; } // datetime
		[Column("id_sub"),              Nullable          ] public int?      IdSub          { get; set; } // int
		[Column("id_status_before"),    Nullable          ] public long?     IdStatusBefore { get; set; } // bigint

		#region Associations

		/// <summary>
		/// FK_detials_status_table_detials_status_table (dbo.detials_status_table)
		/// </summary>
		[Association(ThisKey="IdStatusBefore", OtherKey="Id", CanBeNull=true)]
		public DetialsStatusTable Detialsstatustabledetialsstatustable { get; set; }

		/// <summary>
		/// FK_detials_status_table_detials_status_table_BackReference (dbo.detials_status_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdStatusBefore", CanBeNull=true)]
		public IEnumerable<DetialsStatusTable> FkDetialsStatusTableDetialsStatusTableBackReferences { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="emp_table")]
	public partial class EmpTable
	{
		[Column("id"),           PrimaryKey,  Identity] public int    Id          { get; set; } // int
		[Column("name"),         NotNull              ] public string Name        { get; set; } // nvarchar(50)
		[Column("img"),             Nullable          ] public string Img         { get; set; } // nvarchar(300)
		[Column("phone"),        NotNull              ] public string Phone       { get; set; } // nvarchar(15)
		[Column("email"),           Nullable          ] public string Email       { get; set; } // nvarchar(50)
		[Column("sex"),             Nullable          ] public string Sex         { get; set; } // nvarchar(10)
		[Column("num_identity"),    Nullable          ] public string NumIdentity { get; set; } // nvarchar(50)
		[Column("id_sub"),          Nullable          ] public int?   IdSub       { get; set; } // int

		#region Associations

		/// <summary>
		/// fk_jop_emp_emp_BackReference (dbo.jop_emp_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdEmp", CanBeNull=true)]
		public IEnumerable<JopEmpTable> Fkjopempemps { get; set; }

		/// <summary>
		/// fk_jop_emp_job__BackReference (dbo.jop_emp_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdJobName", CanBeNull=true)]
		public IEnumerable<JopEmpTable> Fkjopempjobs { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="entries_acc_table")]
	public partial class EntriesAccTable
	{
		[Column("id"),               PrimaryKey,  Identity] public long      Id             { get; set; } // bigint
		[Column("debt_or_Credit"),   NotNull              ] public char      DebtOrCredit   { get; set; } // nvarchar(1)
		[Column("amount"),              Nullable          ] public double?   Amount         { get; set; } // float
		[Column("bill_or_band"),     NotNull              ] public string    BillOrBand     { get; set; } // nvarchar(10)
		[Column("id_document_dand"),    Nullable          ] public long?     IdDocumentDand { get; set; } // bigint
		[Column("id_document_bill"),    Nullable          ] public long?     IdDocumentBill { get; set; } // bigint
		[Column("type_document"),    NotNull              ] public string    TypeDocument   { get; set; } // nvarchar(50)
		[Column("id_account"),       NotNull              ] public int       IdAccount      { get; set; } // int
		[Column("id_currancy"),         Nullable          ] public int?      IdCurrancy     { get; set; } // int
		[Column("date"),                Nullable          ] public DateTime? Date           { get; set; } // datetime
		[Column("id_recetion"),         Nullable          ] public long?     IdRecetion     { get; set; } // bigint
		[Column("note"),                Nullable          ] public string    Note           { get; set; } // nvarchar(max)

		#region Associations

		/// <summary>
		/// fk_entries_acc_account (dbo.account_table)
		/// </summary>
		[Association(ThisKey="IdAccount", OtherKey="Id", CanBeNull=false)]
		public AccountTable Fkentriesaccaccount { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="follower_reception_table")]
	public partial class FollowerReceptionTable
	{
		[Column("id"),            PrimaryKey,  Identity] public long      Id           { get; set; } // bigint
		[Column("cu_type"),       NotNull              ] public string    CuType       { get; set; } // nvarchar(10)
		[Column("relation"),      NotNull              ] public string    Relation     { get; set; } // nvarchar(50)
		[Column("id_receptoin"),  NotNull              ] public long      IdReceptoin  { get; set; } // bigint
		[Column("id_customer"),   NotNull              ] public long      IdCustomer   { get; set; } // bigint
		[Column("duration"),         Nullable          ] public char?     Duration     { get; set; } // nvarchar(1)
		[Column("duration_from"),    Nullable          ] public DateTime? DurationFrom { get; set; } // datetime
		[Column("duration_to"),      Nullable          ] public DateTime? DurationTo   { get; set; } // datetime

		#region Associations

		/// <summary>
		/// fk_customers_reception_reception (dbo.recetion_table)
		/// </summary>
		[Association(ThisKey="IdReceptoin", OtherKey="Id", CanBeNull=false)]
		public RecetionTable Fkcustomersreceptionreception { get; set; }

		/// <summary>
		/// FK_follower_reception_table_customer_table (dbo.customer_table)
		/// </summary>
		[Association(ThisKey="IdCustomer", OtherKey="Id", CanBeNull=false)]
		public CustomerTable Followerreceptiontablecustomertable { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="group_account_table")]
	public partial class GroupAccountTable
	{
		[Column("id"),            PrimaryKey,  NotNull] public int    Id          { get; set; } // int
		[Column("name"),                       NotNull] public string Name        { get; set; } // nvarchar(100)
		[Column("id_main_group"),    Nullable         ] public int?   IdMainGroup { get; set; } // int
		[Column("is_root"),          Nullable         ] public bool?  IsRoot      { get; set; } // bit
		[Column("is_private"),       Nullable         ] public bool?  IsPrivate   { get; set; } // bit
		[Column("id_sub"),           Nullable         ] public int?   IdSub       { get; set; } // int

		#region Associations

		/// <summary>
		/// fk_group_account_account_BackReference (dbo.account_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdGroup", CanBeNull=true)]
		public IEnumerable<AccountTable> Fkgroupaccountaccounts { get; set; }

		/// <summary>
		/// fk_group_account_group_account (dbo.group_account_table)
		/// </summary>
		[Association(ThisKey="IdMainGroup", OtherKey="Id", CanBeNull=true)]
		public GroupAccountTable Fkgroupaccountgroupaccount { get; set; }

		/// <summary>
		/// fk_group_account_group_account_BackReference (dbo.group_account_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdMainGroup", CanBeNull=true)]
		public IEnumerable<GroupAccountTable> FkGroupAccountGroupAccountBackReferences { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="group_services_table")]
	public partial class GroupServicesTable
	{
		[Column("id"),      PrimaryKey,  Identity] public int    Id     { get; set; } // int
		[Column("name"),    NotNull              ] public string Name   { get; set; } // nvarchar(max)
		[Column("id_sub"),     Nullable          ] public int?   IdSub  { get; set; } // int
		[Column("name_en"),    Nullable          ] public string NameEn { get; set; } // nvarchar(max)

		#region Associations

		/// <summary>
		/// fk_group_services_product_services_BackReference (dbo.product_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdGroup", CanBeNull=true)]
		public IEnumerable<ProductTable> Fkgroupservicesproductservices { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="hotels_branch_table")]
	public partial class HotelsBranchTable
	{
		[Column("id"),          PrimaryKey,  Identity] public int    Id         { get; set; } // int
		[Column("name_h"),      NotNull              ] public string NameH      { get; set; } // nvarchar(50)
		[Column("num_en"),         Nullable          ] public string NumEn      { get; set; } // nvarchar(50)
		[Column("country"),     NotNull              ] public string Country    { get; set; } // nvarchar(50)
		[Column("city"),        NotNull              ] public string City       { get; set; } // nvarchar(50)
		[Column("regin"),       NotNull              ] public string Regin      { get; set; } // nvarchar(50)
		[Column("address"),        Nullable          ] public string Address    { get; set; } // nvarchar(150)
		[Column("email"),          Nullable          ] public string Email      { get; set; } // nvarchar(max)
		[Column("phone"),       NotNull              ] public string Phone      { get; set; } // nvarchar(max)
		[Column("website"),        Nullable          ] public string Website    { get; set; } // nvarchar(max)
		[Column("mail_box"),       Nullable          ] public string MailBox    { get; set; } // nvarchar(150)
		[Column("logo"),           Nullable          ] public string Logo       { get; set; } // nvarchar(max)
		[Column("id_sub"),         Nullable          ] public int?   IdSub      { get; set; } // int
		[Column("id_country"),     Nullable          ] public int?   IdCountry  { get; set; } // int
		[Column("id_org"),         Nullable          ] public int?   IdOrg      { get; set; } // int
		[Column("count_floot"),    Nullable          ] public int?   CountFloot { get; set; } // int

		#region Associations

		/// <summary>
		/// fk_detials_hotel_hotels_BackReference (dbo.detials_hotel_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdHo", CanBeNull=true)]
		public IEnumerable<DetialsHotelTable> Fkdetialshotelhotels { get; set; }

		/// <summary>
		/// fk_rooms_hotels_BackReference (dbo.rooms_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdHo", CanBeNull=true)]
		public IEnumerable<RoomsTable> Fkroomshotels { get; set; }

		/// <summary>
		/// FK_hotels_branch_table_org_table (dbo.orgs_table)
		/// </summary>
		[Association(ThisKey="IdOrg", OtherKey="Id", CanBeNull=true)]
		public OrgsTable Hotelsbranchtableorgtable { get; set; }

		/// <summary>
		/// FK_hotels_table_country_table (dbo.country_table)
		/// </summary>
		[Association(ThisKey="IdCountry", OtherKey="Id", CanBeNull=true)]
		public CountryTable Hotelstablecountrytable { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="items_expenses_table")]
	public partial class ItemsExpensesTable
	{
		[Column("id"),         PrimaryKey,  Identity] public int       Id        { get; set; } // int
		[Column("name"),       NotNull              ] public string    Name      { get; set; } // nvarchar(300)
		[Column("id_sub"),        Nullable          ] public int?      IdSub     { get; set; } // int
		[Column("id_account"), NotNull              ] public int       IdAccount { get; set; } // int
		[Column("create_at"),     Nullable          ] public DateTime? CreateAt  { get; set; } // datetime

		#region Associations

		/// <summary>
		/// fk_bond_expense_BackReference (dbo.bond_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdItemExpenses", CanBeNull=true)]
		public IEnumerable<BondTable> Fkbondexpenses { get; set; }

		/// <summary>
		/// FK_items_expenses_table_account_table (dbo.account_table)
		/// </summary>
		[Association(ThisKey="IdAccount", OtherKey="Id", CanBeNull=false)]
		public AccountTable Itemsexpensestableaccounttable { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="jobs_name_table")]
	public partial class JobsNameTable
	{
		[Column("id"),     PrimaryKey,  Identity] public int    Id    { get; set; } // int
		[Column("name"),   NotNull              ] public string Name  { get; set; } // nvarchar(300)
		[Column("id_sub"),    Nullable          ] public int?   IdSub { get; set; } // int
	}

	[Table(Schema="dbo", Name="jop_emp_table")]
	public partial class JopEmpTable
	{
		[Column("id"),          PrimaryKey, Identity] public int Id        { get; set; } // int
		[Column("id_emp"),      NotNull             ] public int IdEmp     { get; set; } // int
		[Column("id_job_name"), NotNull             ] public int IdJobName { get; set; } // int

		#region Associations

		/// <summary>
		/// fk_jop_emp_emp (dbo.emp_table)
		/// </summary>
		[Association(ThisKey="IdEmp", OtherKey="Id", CanBeNull=false)]
		public EmpTable Fkjopempemp { get; set; }

		/// <summary>
		/// fk_jop_emp_job_ (dbo.emp_table)
		/// </summary>
		[Association(ThisKey="IdJobName", OtherKey="Id", CanBeNull=false)]
		public EmpTable Fkjopempjob { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="my_customers")]
	public partial class MyCustomer
	{
		[Column("id"),             PrimaryKey,  Identity] public long      Id           { get; set; } // bigint
		[Column("id_customer"),    NotNull              ] public long      IdCustomer   { get; set; } // bigint
		[Column("idsub"),             Nullable          ] public int?      Idsub        { get; set; } // int
		[Column("private_note"),      Nullable          ] public string    PrivateNote  { get; set; } // nvarchar(max)
		[Column("id_account"),        Nullable          ] public int?      IdAccount    { get; set; } // int
		[Column("createat"),          Nullable          ] public DateTime? Createat     { get; set; } // datetime
		[Column("visit_end_date"),    Nullable          ] public DateTime? VisitEndDate { get; set; } // datetime

		#region Associations

		/// <summary>
		/// FK_my_customers_account_table (dbo.account_table)
		/// </summary>
		[Association(ThisKey="IdAccount", OtherKey="Id", CanBeNull=true)]
		public AccountTable Mycustomersaccounttable { get; set; }

		/// <summary>
		/// FK_my_customers_customer_table (dbo.customer_table)
		/// </summary>
		[Association(ThisKey="IdCustomer", OtherKey="Id", CanBeNull=false)]
		public CustomerTable Mycustomerscustomertable { get; set; }

		/// <summary>
		/// FK_recetion_table_my_customers_BackReference (dbo.recetion_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdMyCustomer", CanBeNull=true)]
		public IEnumerable<RecetionTable> Recetiontablemycustomers { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="orgs_table")]
	public partial class OrgsTable
	{
		[Column("id"),         PrimaryKey,  Identity] public int    Id        { get; set; } // int
		[Column("name_h"),     NotNull              ] public string NameH     { get; set; } // nvarchar(50)
		[Column("num_en"),        Nullable          ] public string NumEn     { get; set; } // nvarchar(50)
		[Column("country"),    NotNull              ] public string Country   { get; set; } // nvarchar(50)
		[Column("city"),       NotNull              ] public string City      { get; set; } // nvarchar(50)
		[Column("regin"),      NotNull              ] public string Regin     { get; set; } // nvarchar(50)
		[Column("address"),       Nullable          ] public string Address   { get; set; } // nvarchar(150)
		[Column("email"),         Nullable          ] public string Email     { get; set; } // nvarchar(max)
		[Column("phone"),      NotNull              ] public string Phone     { get; set; } // nvarchar(max)
		[Column("website"),       Nullable          ] public string Website   { get; set; } // nvarchar(max)
		[Column("mail_box"),      Nullable          ] public string MailBox   { get; set; } // nvarchar(150)
		[Column("logo"),          Nullable          ] public string Logo      { get; set; } // nvarchar(max)
		[Column("id_sub"),        Nullable          ] public int?   IdSub     { get; set; } // int
		[Column("id_country"),    Nullable          ] public int?   IdCountry { get; set; } // int
		[Column("tax_num"),       Nullable          ] public string TaxNum    { get; set; } // nvarchar(max)

		#region Associations

		/// <summary>
		/// FK_hotels_branch_table_org_table_BackReference (dbo.hotels_branch_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdOrg", CanBeNull=true)]
		public IEnumerable<HotelsBranchTable> Hotelsbranchtableorgtables { get; set; }

		/// <summary>
		/// FK_org_table_country_table (dbo.country_table)
		/// </summary>
		[Association(ThisKey="IdCountry", OtherKey="Id", CanBeNull=true)]
		public CountryTable Orgtablecountrytable { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="overtime_table")]
	public partial class OvertimeTable
	{
		[Column("id"),         PrimaryKey,  Identity] public int       Id        { get; set; } // int
		[Column("start_date"),    Nullable          ] public DateTime? StartDate { get; set; } // datetime
		[Column("end_date"),      Nullable          ] public DateTime? EndDate   { get; set; } // datetime
		[Column("start_time"), NotNull              ] public TimeSpan  StartTime { get; set; } // time(7)
		[Column("end_time"),   NotNull              ] public TimeSpan  EndTime   { get; set; } // time(7)
		[Column("createat"),   NotNull              ] public DateTime  Createat  { get; set; } // datetime
		[Column("id_user"),       Nullable          ] public int?      IdUser    { get; set; } // int
		[Column("id_sub"),        Nullable          ] public int?      IdSub     { get; set; } // int
	}

	[Table(Schema="dbo", Name="price_rooms_table")]
	public partial class PriceRoomsTable
	{
		[Column("id"),             PrimaryKey,  Identity] public int     Id            { get; set; } // int
		[Column("price"),             Nullable          ] public double? Price         { get; set; } // float
		[Column("price_overtime"),    Nullable          ] public double? PriceOvertime { get; set; } // float
		[Column("price_min"),         Nullable          ] public double? PriceMin      { get; set; } // float
		[Column("id_sub"),            Nullable          ] public int?    IdSub         { get; set; } // int
		[Column("id_room"),        NotNull              ] public int     IdRoom        { get; set; } // int
		[Column("id_tax_group"),      Nullable          ] public int?    IdTaxGroup    { get; set; } // int

		#region Associations

		/// <summary>
		/// fk_rooms_price_rooms (dbo.rooms_table)
		/// </summary>
		[Association(ThisKey="IdRoom", OtherKey="Id", CanBeNull=false)]
		public RoomsTable Fkroomspriceroom { get; set; }

		/// <summary>
		/// FK_price_rooms_table_tax_group_table (dbo.tax_group_table)
		/// </summary>
		[Association(ThisKey="IdTaxGroup", OtherKey="Id", CanBeNull=true)]
		public TaxGroupTable Priceroomstabletaxgrouptable { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="product_table")]
	public partial class ProductTable
	{
		[Column("id"),           PrimaryKey,  Identity] public int    Id         { get; set; } // int
		[Column("name"),         NotNull              ] public string Name       { get; set; } // nvarchar(max)
		[Column("id_group"),     NotNull              ] public int    IdGroup    { get; set; } // int
		[Column("name_en"),         Nullable          ] public string NameEn     { get; set; } // nvarchar(max)
		[Column("price"),        NotNull              ] public double Price      { get; set; } // float
		[Column("id_tax_group"),    Nullable          ] public int?   IdTaxGroup { get; set; } // int

		#region Associations

		/// <summary>
		/// fk_group_services_product_services (dbo.group_services_table)
		/// </summary>
		[Association(ThisKey="IdGroup", OtherKey="Id", CanBeNull=false)]
		public GroupServicesTable Fkgroupservicesproductservice { get; set; }

		/// <summary>
		/// fk_product_services_detials_BackReference (dbo.detials_bills_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdProduct", CanBeNull=true)]
		public IEnumerable<DetialsBillsTable> Fkproductservicesdetials { get; set; }

		/// <summary>
		/// FK_product_table_tax_group_table (dbo.tax_group_table)
		/// </summary>
		[Association(ThisKey="IdTaxGroup", OtherKey="Id", CanBeNull=true)]
		public TaxGroupTable Producttabletaxgrouptable { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="recetion_table")]
	public partial class RecetionTable
	{
		[Column("id"),             PrimaryKey,  Identity] public long      Id           { get; set; } // bigint
		[Column("source"),         NotNull              ] public string    Source       { get; set; } // nvarchar(50)
		[Column("price"),             Nullable          ] public double?   Price        { get; set; } // float
		[Column("qty_time"),          Nullable          ] public int?      QtyTime      { get; set; } // int
		[Column("unit"),           NotNull              ] public string    Unit         { get; set; } // nvarchar(50)
		[Column("start_date"),     NotNull              ] public DateTime  StartDate    { get; set; } // datetime
		[Column("end_date"),       NotNull              ] public DateTime  EndDate      { get; set; } // datetime
		[Column("type_date"),         Nullable          ] public char?     TypeDate     { get; set; } // nvarchar(1)
		[Column("is_chechin"),        Nullable          ] public bool?     IsChechin    { get; set; } // bit
		[Column("checkin_date"),      Nullable          ] public DateTime? CheckinDate  { get; set; } // datetime
		[Column("is_chechout"),       Nullable          ] public bool?     IsChechout   { get; set; } // bit
		[Column("chechout_date"),     Nullable          ] public DateTime? ChechoutDate { get; set; } // datetime
		[Column("id_room"),        NotNull              ] public int       IdRoom       { get; set; } // int
		[Column("note"),              Nullable          ] public string    Note         { get; set; } // nvarchar(max)
		[Column("id_co"),             Nullable          ] public int?      IdCo         { get; set; } // int
		[Column("id_my_customer"),    Nullable          ] public long?     IdMyCustomer { get; set; } // bigint
		[Column("status"),            Nullable          ] public int?      Status       { get; set; } // int
		[Column("why_visit"),         Nullable          ] public string    WhyVisit     { get; set; } // nvarchar(max)
		[Column("area_from"),         Nullable          ] public string    AreaFrom     { get; set; } // nvarchar(max)

		#region Associations

		/// <summary>
		/// fk_bills_reception_BackReference (dbo.bills_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdReception", CanBeNull=true)]
		public IEnumerable<BillsTable> Fkbillsreceptions { get; set; }

		/// <summary>
		/// fk_company_recetion (dbo.company_table)
		/// </summary>
		[Association(ThisKey="IdCo", OtherKey="Id", CanBeNull=true)]
		public CompanyTable Fkcompanyrecetion { get; set; }

		/// <summary>
		/// fk_customers_reception_reception_BackReference (dbo.follower_reception_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdReceptoin", CanBeNull=true)]
		public IEnumerable<FollowerReceptionTable> Fkcustomersreceptionreceptions { get; set; }

		/// <summary>
		/// FK_recetion_table_my_customers (dbo.my_customers)
		/// </summary>
		[Association(ThisKey="IdMyCustomer", OtherKey="Id", CanBeNull=true)]
		public MyCustomer Recetiontablemycustomer { get; set; }

		/// <summary>
		/// FK_recetion_table_rooms_table (dbo.rooms_table)
		/// </summary>
		[Association(ThisKey="IdRoom", OtherKey="Id", CanBeNull=false)]
		public RoomsTable Recetiontableroomstable { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="rooms_table")]
	public partial class RoomsTable
	{
		[Column("id"),               PrimaryKey,  Identity] public int    Id              { get; set; } // int
		[Column("name_r"),           NotNull              ] public string NameR           { get; set; } // nvarchar(50)
		[Column("num_floor"),           Nullable          ] public string NumFloor        { get; set; } // nvarchar(50)
		[Column("count_rooms"),         Nullable          ] public int?   CountRooms      { get; set; } // int
		[Column("count_bed_single"),    Nullable          ] public int?   CountBedSingle  { get; set; } // int
		[Column("count_bed_double"),    Nullable          ] public int?   CountBedDouble  { get; set; } // int
		[Column("count_bathroom"),      Nullable          ] public int?   CountBathroom   { get; set; } // int
		[Column("count_tv"),            Nullable          ] public int?   CountTv         { get; set; } // int
		[Column("count_wallet"),        Nullable          ] public int?   CountWallet     { get; set; } // int
		[Column("type_condition"),      Nullable          ] public string TypeCondition   { get; set; } // nvarchar(50)
		[Column("public_features"),     Nullable          ] public string PublicFeatures  { get; set; } // nvarchar(max)
		[Column("private_features"),    Nullable          ] public string PrivateFeatures { get; set; } // nvarchar(max)
		[Column("note"),                Nullable          ] public string Note            { get; set; } // nvarchar(max)
		[Column("id_ho"),            NotNull              ] public int    IdHo            { get; set; } // int
		[Column("id_type"),          NotNull              ] public int    IdType          { get; set; } // int

		#region Associations

		/// <summary>
		/// fk_detials_status_room_BackReference (dbo.status_current_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdRoom", CanBeNull=true)]
		public IEnumerable<StatusCurrentTable> Fkdetialsstatusrooms { get; set; }

		/// <summary>
		/// fk_rooms_hotels (dbo.hotels_branch_table)
		/// </summary>
		[Association(ThisKey="IdHo", OtherKey="Id", CanBeNull=false)]
		public HotelsBranchTable Fkroomshotel { get; set; }

		/// <summary>
		/// fk_rooms_price_rooms_BackReference (dbo.price_rooms_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdRoom", CanBeNull=true)]
		public IEnumerable<PriceRoomsTable> Fkroomspricerooms { get; set; }

		/// <summary>
		/// fk_rooms_type_rooms (dbo.type_rooms_table)
		/// </summary>
		[Association(ThisKey="IdType", OtherKey="Id", CanBeNull=false)]
		public TypeRoomsTable Fkroomstyperoom { get; set; }

		/// <summary>
		/// FK_recetion_table_rooms_table_BackReference (dbo.recetion_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdRoom", CanBeNull=true)]
		public IEnumerable<RecetionTable> Recetiontableroomstables { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="setting_general_table")]
	public partial class SettingGeneralTable
	{
		[Column("id"),                   PrimaryKey, NotNull] public int  Id                 { get; set; } // int
		[Column("services_include_tax"),             NotNull] public bool ServicesIncludeTax { get; set; } // bit
		[Column("enable_tax_num"),                   NotNull] public bool EnableTaxNum       { get; set; } // bit
	}

	[Table(Schema="dbo", Name="setting_reception_table")]
	public partial class SettingReceptionTable
	{
		[Column("id"),                           PrimaryKey,  Identity] public int       Id                        { get; set; } // int
		[Column("is_checkin_time"),                 Nullable          ] public bool?     IsCheckinTime             { get; set; } // bit
		[Column("time_checkin"),                    Nullable          ] public TimeSpan? TimeCheckin               { get; set; } // time(7)
		[Column("is_checkout_time"),                Nullable          ] public bool?     IsCheckoutTime            { get; set; } // bit
		[Column("time_checkout"),                   Nullable          ] public TimeSpan? TimeCheckout              { get; set; } // time(7)
		[Column("is_interval_changeroom"),          Nullable          ] public bool?     IsIntervalChangeroom      { get; set; } // bit
		[Column("interval_changeroom"),             Nullable          ] public int?      IntervalChangeroom        { get; set; } // int
		[Column("is_mounth_reception_checkout"),    Nullable          ] public bool?     IsMounthReceptionCheckout { get; set; } // bit
		[Column("id_sub"),                       NotNull              ] public int       IdSub                     { get; set; } // int
		[Column("incude_price_tax"),                Nullable          ] public bool?     IncudePriceTax            { get; set; } // bit
	}

	[Table(Schema="dbo", Name="status_current_table")]
	public partial class StatusCurrentTable
	{
		[Column("id"),           PrimaryKey,  Identity] public int       Id          { get; set; } // int
		[Column("status"),          Nullable          ] public string    Status      { get; set; } // nvarchar(50)
		[Column("id_room"),      NotNull              ] public int       IdRoom      { get; set; } // int
		[Column("start_date"),      Nullable          ] public DateTime? StartDate   { get; set; } // datetime2(7)
		[Column("end_date"),        Nullable          ] public DateTime? EndDate     { get; set; } // datetime2(7)
		[Column("id_reception"),    Nullable          ] public long?     IdReception { get; set; } // bigint
		[Column("id_emp"),          Nullable          ] public int?      IdEmp       { get; set; } // int
		[Column("createat"),        Nullable          ] public DateTime? Createat    { get; set; } // datetime
		[Column("detials"),         Nullable          ] public string    Detials     { get; set; } // nvarchar(max)

		#region Associations

		/// <summary>
		/// fk_detials_status_room (dbo.rooms_table)
		/// </summary>
		[Association(ThisKey="IdRoom", OtherKey="Id", CanBeNull=false)]
		public RoomsTable Fkdetialsstatusroom { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="tax_group_table")]
	public partial class TaxGroupTable
	{
		[Column("id"),            PrimaryKey,  Identity] public int     Id          { get; set; } // int
		[Column("name"),          NotNull              ] public string  Name        { get; set; } // nvarchar(max)
		[Column("name_en"),          Nullable          ] public string  NameEn      { get; set; } // nvarchar(200)
		[Column("rate"),          NotNull              ] public int     Rate        { get; set; } // int
		[Column("id_user"),          Nullable          ] public int?    IdUser      { get; set; } // int
		[Column("is_baladi_tax"), NotNull              ] public bool    IsBaladiTax { get; set; } // bit
		[Column("baladi_rate"),      Nullable          ] public double? BaladiRate  { get; set; } // float

		#region Associations

		/// <summary>
		/// FK_price_rooms_table_tax_group_table_BackReference (dbo.price_rooms_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdTaxGroup", CanBeNull=true)]
		public IEnumerable<PriceRoomsTable> Priceroomstabletaxgrouptables { get; set; }

		/// <summary>
		/// FK_product_table_tax_group_table_BackReference (dbo.product_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdTaxGroup", CanBeNull=true)]
		public IEnumerable<ProductTable> Producttabletaxgrouptables { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="type_rooms_table")]
	public partial class TypeRoomsTable
	{
		[Column("id"),     PrimaryKey,  Identity] public int    Id    { get; set; } // int
		[Column("name_t"), NotNull              ] public string NameT { get; set; } // nvarchar(max)
		[Column("color"),     Nullable          ] public string Color { get; set; } // nvarchar(50)
		[Column("id_sub"),    Nullable          ] public int?   IdSub { get; set; } // int

		#region Associations

		/// <summary>
		/// fk_rooms_type_rooms_BackReference (dbo.rooms_table)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="IdType", CanBeNull=true)]
		public IEnumerable<RoomsTable> Fkroomstyperooms { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="user_table")]
	public partial class UserTable
	{
		[Column("id"),       PrimaryKey, Identity] public int    Id       { get; set; } // int
		[Column("username"), NotNull             ] public string Username { get; set; } // nvarchar(50)
		[Column("password"), NotNull             ] public string Password { get; set; } // nvarchar(50)
		[Column("role"),     NotNull             ] public string Role     { get; set; } // nvarchar(50)
		[Column("id_sub"),   NotNull             ] public int    IdSub    { get; set; } // int
	}

	public static partial class HotelAlkheerDBStoredProcedures
	{
		#region GetBalanceAccount

		public static IEnumerable<GetBalanceAccountResult> GetBalanceAccount(this HotelAlkheerDB dataConnection, int? @IdAccount, int? @IdSub)
		{
			var parameters = new []
			{
				new DataParameter("@IdAccount", @IdAccount, LinqToDB.DataType.Int32),
				new DataParameter("@IdSub",     @IdSub,     LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<GetBalanceAccountResult>("[dbo].[Get_BalanceAccount]", parameters);
		}

		public partial class GetBalanceAccountResult
		{
			public long    id                 { get; set; }
			public int     id_account         { get; set; }
			public double? FromPrice          { get; set; }
			public double? ToPrice            { get; set; }
			public string  NameAccount        { get; set; }
			public string  billOrBandDocumnet { get; set; }
			public string  typeDocumnet       { get; set; }
			public long?   IdDocument         { get; set; }
			public string  dateDocumnet       { get; set; }
			public string  Note               { get; set; }
			public int?    id_currancy        { get; set; }
			public char    debt_or_Credit     { get; set; }
		}

		#endregion

		#region GetBalanceAccountBetweenDate

		public static IEnumerable<GetBalanceAccountBetweenDateResult> GetBalanceAccountBetweenDate(this HotelAlkheerDB dataConnection, int? @IdAccount, int? @IdSub, DateTime? @FromDate, DateTime? @ToDate)
		{
			var parameters = new []
			{
				new DataParameter("@IdAccount", @IdAccount, LinqToDB.DataType.Int32),
				new DataParameter("@IdSub",     @IdSub,     LinqToDB.DataType.Int32),
				new DataParameter("@FromDate",  @FromDate,  LinqToDB.DataType.DateTime),
				new DataParameter("@ToDate",    @ToDate,    LinqToDB.DataType.DateTime)
			};

			return dataConnection.QueryProc<GetBalanceAccountBetweenDateResult>("[dbo].[Get_BalanceAccountBetweenDate]", parameters);
		}

		public partial class GetBalanceAccountBetweenDateResult
		{
			public long    id                 { get; set; }
			public int     id_account         { get; set; }
			public double? FromPrice          { get; set; }
			public double? ToPrice            { get; set; }
			public string  NameAccount        { get; set; }
			public string  billOrBandDocumnet { get; set; }
			public string  typeDocumnet       { get; set; }
			public long?   IdDocument         { get; set; }
			public string  dateDocumnet       { get; set; }
			public string  Note               { get; set; }
			public int?    id_currancy        { get; set; }
			public char    debt_or_Credit     { get; set; }
		}

		#endregion

		#region GetBalanceReception

		public static IEnumerable<GetBalanceReceptionResult> GetBalanceReception(this HotelAlkheerDB dataConnection, long? @IdReception, int? @IdAccount, int? @IdSub)
		{
			var parameters = new []
			{
				new DataParameter("@IdReception", @IdReception, LinqToDB.DataType.Int64),
				new DataParameter("@IdAccount",   @IdAccount,   LinqToDB.DataType.Int32),
				new DataParameter("@IdSub",       @IdSub,       LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<GetBalanceReceptionResult>("[dbo].[Get_BalanceReception]", parameters);
		}

		public partial class GetBalanceReceptionResult
		{
			public long    id                 { get; set; }
			public int     id_account         { get; set; }
			public double? FromPrice          { get; set; }
			public double? ToPrice            { get; set; }
			public string  NameAccount        { get; set; }
			public string  billOrBandDocumnet { get; set; }
			public string  typeDocumnet       { get; set; }
			public long?   IdDocument         { get; set; }
			public string  dateDocumnet       { get; set; }
			public string  Note               { get; set; }
			public int?    id_currancy        { get; set; }
			public char    debt_or_Credit     { get; set; }
		}

		#endregion

		#region GetBalanceRoom

		public static IEnumerable<GetBalanceRoomResult> GetBalanceRoom(this HotelAlkheerDB dataConnection, int? @IdSub)
		{
			var parameters = new []
			{
				new DataParameter("@IdSub", @IdSub, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<GetBalanceRoomResult>("[dbo].[Get_BalanceRoom]", parameters);
		}

		public partial class GetBalanceRoomResult
		{
			public int       id          { get; set; }
			public int       id_room     { get; set; }
			public string    name_room   { get; set; }
			public string    type_room   { get; set; }
			public string    status      { get; set; }
			public DateTime? start_date  { get; set; }
			public DateTime? end_date    { get; set; }
			public double?   balance     { get; set; }
			public string    nameAccount { get; set; }
			public long?     IdReception { get; set; }
			public string    color       { get; set; }
		}

		#endregion

		#region GetLastRoomStatus

		public static IEnumerable<DetialsStatusTable> GetLastRoomStatus(this HotelAlkheerDB dataConnection, int? @idRoom, int? @IdSub)
		{
			var parameters = new []
			{
				new DataParameter("@idRoom", @idRoom, LinqToDB.DataType.Int32),
				new DataParameter("@IdSub",  @IdSub,  LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<DetialsStatusTable>("[dbo].[Get_Last_RoomStatus]", parameters);
		}

		#endregion

		#region GetNowReceptionByIdAcc

		public static IEnumerable<GetNowReceptionByIdAccResult> GetNowReceptionByIdAcc(this HotelAlkheerDB dataConnection, int? @IdSub, int? @IdAcc)
		{
			var parameters = new []
			{
				new DataParameter("@IdSub", @IdSub, LinqToDB.DataType.Int32),
				new DataParameter("@IdAcc", @IdAcc, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<GetNowReceptionByIdAccResult>("[dbo].[get_NowReceptionByIdAcc]", parameters);
		}

		public partial class GetNowReceptionByIdAccResult
		{
			public int       id          { get; set; }
			public int       id_room     { get; set; }
			public string    name_room   { get; set; }
			public string    type_room   { get; set; }
			public string    status      { get; set; }
			public DateTime? start_date  { get; set; }
			public DateTime? end_date    { get; set; }
			public string    nameAccount { get; set; }
			public string    color       { get; set; }
			public long?     IdReception { get; set; }
		}

		#endregion

		#region GetPayBondListForReception

		public static IEnumerable<GetPayBondListForReceptionResult> GetPayBondListForReception(this HotelAlkheerDB dataConnection, string @Type, long? @IdReception)
		{
			var parameters = new []
			{
				new DataParameter("@Type",        @Type,        LinqToDB.DataType.VarChar)
				{
					Size = 10
				},
				new DataParameter("@IdReception", @IdReception, LinqToDB.DataType.Int64)
			};

			return dataConnection.QueryProc<GetPayBondListForReceptionResult>("[dbo].[Get_PayBondListForReception]", parameters);
		}

		public partial class GetPayBondListForReceptionResult
		{
			public long     id      { get; set; }
			public double   amount  { get; set; }
			public string   typepay { get; set; }
			public DateTime date    { get; set; }
		}

		#endregion

		#region GetRoomReceptionWithIn

		public static IEnumerable<GetRoomReceptionWithInResult> GetRoomReceptionWithIn(this HotelAlkheerDB dataConnection, int? @IdSub)
		{
			var parameters = new []
			{
				new DataParameter("@IdSub", @IdSub, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<GetRoomReceptionWithInResult>("[dbo].[get_RoomReceptionWithIn]", parameters);
		}

		public partial class GetRoomReceptionWithInResult
		{
			public int       id                  { get; set; }
			public int       id_room             { get; set; }
			public string    name_room           { get; set; }
			public string    type_room           { get; set; }
			public string    status              { get; set; }
			public DateTime? start_date          { get; set; }
			public DateTime? end_date            { get; set; }
			public string    nameAccount         { get; set; }
			public string    color               { get; set; }
			public long?     IdReception         { get; set; }
			public int       id_account          { get; set; }
			public string    customer_or_company { get; set; }
		}

		#endregion

		#region GetRoomStatusWittoutIn

		public static IEnumerable<GetRoomStatusWittoutInResult> GetRoomStatusWittoutIn(this HotelAlkheerDB dataConnection, int? @IdSub)
		{
			var parameters = new []
			{
				new DataParameter("@IdSub", @IdSub, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<GetRoomStatusWittoutInResult>("[dbo].[get_RoomStatusWittoutIn]", parameters);
		}

		public partial class GetRoomStatusWittoutInResult
		{
			public int       id          { get; set; }
			public int       id_room     { get; set; }
			public string    name_room   { get; set; }
			public string    type_room   { get; set; }
			public string    status      { get; set; }
			public DateTime? start_date  { get; set; }
			public DateTime? end_date    { get; set; }
			public string    nameAccount { get; set; }
			public string    color       { get; set; }
			public long?     IdReception { get; set; }
		}

		#endregion

		#region GetClientsBalance

		public static IEnumerable<GetClientsBalanceResult> GetClientsBalance(this HotelAlkheerDB dataConnection, int? @IdSub)
		{
			var parameters = new []
			{
				new DataParameter("@IdSub", @IdSub, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<GetClientsBalanceResult>("[dbo].[GetClientsBalance]", parameters);
		}

		public partial class GetClientsBalanceResult
		{
			public long    idCustomer { get; set; }
			public string  name       { get; set; }
			public int?    id_account { get; set; }
			public double? FromPrice  { get; set; }
			public double? ToPrice    { get; set; }
			public string  messag     { get; set; }
		}

		#endregion

		#region GetCompanysBalance

		public static IEnumerable<GetCompanysBalanceResult> GetCompanysBalance(this HotelAlkheerDB dataConnection, int? @IdSub)
		{
			var parameters = new []
			{
				new DataParameter("@IdSub", @IdSub, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<GetCompanysBalanceResult>("[dbo].[GetCompanysBalance]", parameters);
		}

		public partial class GetCompanysBalanceResult
		{
			public int     idCustomer { get; set; }
			public string  name       { get; set; }
			public int?    id_account { get; set; }
			public double? FromPrice  { get; set; }
			public double? ToPrice    { get; set; }
			public string  messag     { get; set; }
		}

		#endregion

		#region SpAlterdiagram

		public static int SpAlterdiagram(this HotelAlkheerDB dataConnection, string @diagramname, int? @owner_id, int? @version, byte[] @definition)
		{
			var parameters = new []
			{
				new DataParameter("@diagramname", @diagramname, LinqToDB.DataType.NVarChar)
				{
					Size = 128
				},
				new DataParameter("@owner_id",    @owner_id,    LinqToDB.DataType.Int32),
				new DataParameter("@version",     @version,     LinqToDB.DataType.Int32),
				new DataParameter("@definition",  @definition,  LinqToDB.DataType.VarBinary)
				{
					Size = -1
				}
			};

			return dataConnection.ExecuteProc("[dbo].[sp_alterdiagram]", parameters);
		}

		#endregion

		#region SpCreatediagram

		public static int SpCreatediagram(this HotelAlkheerDB dataConnection, string @diagramname, int? @owner_id, int? @version, byte[] @definition)
		{
			var parameters = new []
			{
				new DataParameter("@diagramname", @diagramname, LinqToDB.DataType.NVarChar)
				{
					Size = 128
				},
				new DataParameter("@owner_id",    @owner_id,    LinqToDB.DataType.Int32),
				new DataParameter("@version",     @version,     LinqToDB.DataType.Int32),
				new DataParameter("@definition",  @definition,  LinqToDB.DataType.VarBinary)
				{
					Size = -1
				}
			};

			return dataConnection.ExecuteProc("[dbo].[sp_creatediagram]", parameters);
		}

		#endregion

		#region SpDropdiagram

		public static int SpDropdiagram(this HotelAlkheerDB dataConnection, string @diagramname, int? @owner_id)
		{
			var parameters = new []
			{
				new DataParameter("@diagramname", @diagramname, LinqToDB.DataType.NVarChar)
				{
					Size = 128
				},
				new DataParameter("@owner_id",    @owner_id,    LinqToDB.DataType.Int32)
			};

			return dataConnection.ExecuteProc("[dbo].[sp_dropdiagram]", parameters);
		}

		#endregion

		#region SpHelpdiagramdefinition

		public static IEnumerable<SpHelpdiagramdefinitionResult> SpHelpdiagramdefinition(this HotelAlkheerDB dataConnection, string @diagramname, int? @owner_id)
		{
			var parameters = new []
			{
				new DataParameter("@diagramname", @diagramname, LinqToDB.DataType.NVarChar)
				{
					Size = 128
				},
				new DataParameter("@owner_id",    @owner_id,    LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<SpHelpdiagramdefinitionResult>("[dbo].[sp_helpdiagramdefinition]", parameters);
		}

		public partial class SpHelpdiagramdefinitionResult
		{
			public int?   version    { get; set; }
			public byte[] definition { get; set; }
		}

		#endregion

		#region SpHelpdiagrams

		public static IEnumerable<SpHelpdiagramsResult> SpHelpdiagrams(this HotelAlkheerDB dataConnection, string @diagramname, int? @owner_id)
		{
			var parameters = new []
			{
				new DataParameter("@diagramname", @diagramname, LinqToDB.DataType.NVarChar)
				{
					Size = 128
				},
				new DataParameter("@owner_id",    @owner_id,    LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<SpHelpdiagramsResult>("[dbo].[sp_helpdiagrams]", parameters);
		}

		public partial class SpHelpdiagramsResult
		{
			public string Database { get; set; }
			public string Name     { get; set; }
			public int    ID       { get; set; }
			public string Owner    { get; set; }
			public int    OwnerID  { get; set; }
		}

		#endregion

		#region SpRenamediagram

		public static int SpRenamediagram(this HotelAlkheerDB dataConnection, string @diagramname, int? @owner_id, string @new_diagramname)
		{
			var parameters = new []
			{
				new DataParameter("@diagramname",     @diagramname,     LinqToDB.DataType.NVarChar)
				{
					Size = 128
				},
				new DataParameter("@owner_id",        @owner_id,        LinqToDB.DataType.Int32),
				new DataParameter("@new_diagramname", @new_diagramname, LinqToDB.DataType.NVarChar)
				{
					Size = 128
				}
			};

			return dataConnection.ExecuteProc("[dbo].[sp_renamediagram]", parameters);
		}

		#endregion
	}

	public static partial class SqlFunctions
	{
		#region FnDiagramobjects

		[Sql.Function(Name="[dbo].[fn_diagramobjects]", ServerSideOnly=true)]
		public static int? FnDiagramobjects()
		{
			throw new InvalidOperationException();
		}

		#endregion
	}

	public static partial class TableExtensions
	{
		public static AccountTable Find(this ITable<AccountTable> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static AdminTable Find(this ITable<AdminTable> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static AreaTable Find(this ITable<AreaTable> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static AspNetRole Find(this ITable<AspNetRole> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static AspNetRoleClaim Find(this ITable<AspNetRoleClaim> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static AspNetUser Find(this ITable<AspNetUser> table, string Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static AspNetUserClaim Find(this ITable<AspNetUserClaim> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static AspNetUserLogin Find(this ITable<AspNetUserLogin> table, string LoginProvider, string ProviderKey)
		{
			return table.FirstOrDefault(t =>
				t.LoginProvider == LoginProvider &&
				t.ProviderKey   == ProviderKey);
		}

		public static AspNetUserRole Find(this ITable<AspNetUserRole> table, string UserId, string RoleId)
		{
			return table.FirstOrDefault(t =>
				t.UserId == UserId &&
				t.RoleId == RoleId);
		}

		public static AspNetUserToken Find(this ITable<AspNetUserToken> table, string UserId, string LoginProvider, string Name)
		{
			return table.FirstOrDefault(t =>
				t.UserId        == UserId        &&
				t.LoginProvider == LoginProvider &&
				t.Name          == Name);
		}

		public static BankTable Find(this ITable<BankTable> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static BillsTable Find(this ITable<BillsTable> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static BondTable Find(this ITable<BondTable> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static BoxsTable Find(this ITable<BoxsTable> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static BoxsUserTable Find(this ITable<BoxsUserTable> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ChangeRoomTable Find(this ITable<ChangeRoomTable> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static CityTable Find(this ITable<CityTable> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static CompanyTable Find(this ITable<CompanyTable> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ConditionReceptionTable Find(this ITable<ConditionReceptionTable> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static CountryTable Find(this ITable<CountryTable> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static CurrencyTable Find(this ITable<CurrencyTable> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static CustomerTable Find(this ITable<CustomerTable> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static DetialsBillsTable Find(this ITable<DetialsBillsTable> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static DetialsHotelTable Find(this ITable<DetialsHotelTable> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static DetialsStatusTable Find(this ITable<DetialsStatusTable> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static EmpTable Find(this ITable<EmpTable> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static EntriesAccTable Find(this ITable<EntriesAccTable> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static FollowerReceptionTable Find(this ITable<FollowerReceptionTable> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static GroupAccountTable Find(this ITable<GroupAccountTable> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static GroupServicesTable Find(this ITable<GroupServicesTable> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static HotelsBranchTable Find(this ITable<HotelsBranchTable> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ItemsExpensesTable Find(this ITable<ItemsExpensesTable> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static JobsNameTable Find(this ITable<JobsNameTable> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static JopEmpTable Find(this ITable<JopEmpTable> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static MyCustomer Find(this ITable<MyCustomer> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static OrgsTable Find(this ITable<OrgsTable> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static OvertimeTable Find(this ITable<OvertimeTable> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static PriceRoomsTable Find(this ITable<PriceRoomsTable> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static ProductTable Find(this ITable<ProductTable> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static RecetionTable Find(this ITable<RecetionTable> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static RoomsTable Find(this ITable<RoomsTable> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static SettingGeneralTable Find(this ITable<SettingGeneralTable> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static SettingReceptionTable Find(this ITable<SettingReceptionTable> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static StatusCurrentTable Find(this ITable<StatusCurrentTable> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static TaxGroupTable Find(this ITable<TaxGroupTable> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static TypeRoomsTable Find(this ITable<TypeRoomsTable> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static UserTable Find(this ITable<UserTable> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}
	}
}
